{"version":3,"file":"static/js/145.a7d481c1.chunk.js","mappings":"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","sources":["pages/RegisterPage/index.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from 'axios';\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { LOGIN_PAGE, HOME, SERVER_API } from \"config\";\r\nimport { toast } from 'react-toastify';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { login } from 'store/user';\r\n\r\nimport './style.scss';\r\nexport default function RegisterPage() {\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n    const user = useSelector(state => state.user);\r\n    const client = axios.create({ baseURL: SERVER_API });\r\n\r\n    useEffect(() => {\r\n        if (user.token) navigate(HOME + '/');\r\n    }, []);\r\n\r\n    const [fullnameInput, setFullnameInput] = useState('');\r\n    const [emailInput, setEmailInput] = useState('');\r\n    const [passwordInput, setPasswordInput] = useState('');\r\n\r\n    // Xử lý sự kiện submit register\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        const data = {\r\n            fullname: fullnameInput.trim(),\r\n            email: emailInput.trim(),\r\n            password: passwordInput.trim()\r\n        };\r\n        if (!data.email || !data.password || !data.fullname) {\r\n            toast.error('Một hoặc nhiều trường bị bỏ trống.')\r\n        } else if (data.password.length < 8) {\r\n            toast.error('Mật khẩu cần ít nhất 8 kí tự.');\r\n        } else {\r\n            client.post('/auth/regist', data).then((res) => {\r\n                dispatch(login({\r\n                    token: res.data.token,\r\n                    data: res.data.data\r\n                }))\r\n                navigate(HOME + '/');\r\n            }).catch(e => {\r\n                if (e.response && e.response.data) {\r\n                    toast.error(e.response.data.errors[0]);\r\n                } else {\r\n                    toast.error('Máy chủ gặp sự cố, vui lòng thử lại');\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    return (<>\r\n        <div>\r\n            <div className=\"login-bg\" style={{ backgroundImage: 'url(./images/banner/1.jpg)' }}></div>\r\n            <div className=\"container\">\r\n                <div className=\"login-page\">\r\n                    <div className=\"card pi--30\">\r\n                        <div className=\"card__content align--center\">\r\n                            <h3>SIGN UP</h3>\r\n                            <div className=\"gap\"></div>\r\n                            <div className=\"gap\"></div>\r\n                            <form onSubmit={submitHandler}>\r\n                                <div className=\"\">\r\n                                    <input className=\"input\" placeholder=\"Full name\"\r\n                                        value={fullnameInput}\r\n                                        onChange={(e) => setFullnameInput(e.target.value)}\r\n                                    />\r\n                                    <input type='email' className=\"input\" placeholder=\"Email\"\r\n                                        value={emailInput}\r\n                                        onChange={(e) => setEmailInput(e.target.value.trim())}\r\n                                    />\r\n                                    <input type='password' className=\"input\" placeholder=\"Password\" autoComplete='false'\r\n                                        value={passwordInput}\r\n                                        onChange={(e) => setPasswordInput(e.target.value.trim())}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"gap\"></div>\r\n                                <div>\r\n                                    <button className=\"btn black\" type=\"submit\">Sign up</button>\r\n                                </div>\r\n                            </form>\r\n                            <div className=\"gap--50\"></div>\r\n                            <div className=\"align--center\">\r\n                                Login?\r\n                                <Link to={LOGIN_PAGE} className=\"pi--20\">Sign in</Link>\r\n                            </div>\r\n                            <div className=\"gap--50\"></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </>)\r\n}"],"names":["RegisterPage","navigate","useNavigate","dispatch","useDispatch","user","useSelector","state","client","axios","baseURL","SERVER_API","useEffect","token","HOME","_useState","useState","_useState2","_slicedToArray","fullnameInput","setFullnameInput","_useState3","_useState4","emailInput","setEmailInput","_useState5","_useState6","passwordInput","setPasswordInput","_jsx","_Fragment","children","_jsxs","className","style","backgroundImage","onSubmit","e","preventDefault","data","fullname","trim","email","password","length","toast","post","then","res","login","catch","response","errors","placeholder","value","onChange","target","type","autoComplete","Link","to","LOGIN_PAGE"],"sourceRoot":""}